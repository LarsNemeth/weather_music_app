[{"/home/user/Desktop/DCI_Projekte/weather_music_app/src/index.js":"1","/home/user/Desktop/DCI_Projekte/weather_music_app/src/reportWebVitals.js":"2","/home/user/Desktop/DCI_Projekte/weather_music_app/src/App.js":"3","/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Song.js":"4","/home/user/Desktop/DCI_Projekte/weather_music_app/src/data.js":"5","/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Library.js":"6","/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Player.js":"7","/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Nav.js":"8","/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/weatherComponents/Weather.js":"9","/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/LibrarySong.js":"10","/home/user/Desktop/DCI_Projekte/weather_music_app/src/services/apiKeys.js":"11","/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Products.js":"12","/home/user/Desktop/DCI_Projekte/weather_music_app/src/services/getCityImage.js":"13"},{"size":478,"mtime":1637143073131,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1637143073131,"results":"16","hashOfConfig":"15"},{"size":5753,"mtime":1638976096842,"results":"17","hashOfConfig":"15"},{"size":338,"mtime":1638816209062,"results":"18","hashOfConfig":"15"},{"size":1591,"mtime":1638975480874,"results":"19","hashOfConfig":"15"},{"size":707,"mtime":1638355593304,"results":"20","hashOfConfig":"15"},{"size":6074,"mtime":1638355593304,"results":"21","hashOfConfig":"15"},{"size":855,"mtime":1638535219163,"results":"22","hashOfConfig":"15"},{"size":4295,"mtime":1638971589318,"results":"23","hashOfConfig":"15"},{"size":1495,"mtime":1638873445055,"results":"24","hashOfConfig":"15"},{"size":654,"mtime":1638809005034,"results":"25","hashOfConfig":"15"},{"size":466,"mtime":1638781686223,"results":"26","hashOfConfig":"15"},{"size":529,"mtime":1638809001150,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"26je0v",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"/home/user/Desktop/DCI_Projekte/weather_music_app/src/index.js",[],["59","60"],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/reportWebVitals.js",[],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/App.js",["61","62"],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Song.js",[],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/data.js",[],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Library.js",[],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Player.js",[],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Nav.js",[],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/weatherComponents/Weather.js",["63","64","65","66"],"import React, { useState, useEffect, useContext } from 'react';\nimport { getWeatherData } from '../../services/apiKeys';\nimport { getCityImage } from '../../services/getCityImage';\n\nimport { weatherMusicContext } from '../../App';\n\nconst Weather = ({\n  weatherStatus,\n  city,\n  setCity,\n  weatherdata,\n  setWeatherData,\n}) => {\n  const { changeMood } = useContext(weatherMusicContext);\n\n  //! Get the Weatherdata from openweather\n  const getData = async () => {\n    try {\n      const data = await getWeatherData(city);\n      setWeatherData(data);\n      console.log('Data from my getDate-Funcion', data);\n      changeMood(data);\n    } catch (error) {\n      console.log(\"Can't get no Data from openweather_API\", error.message);\n    }\n  };\n\n  // //! Get the ImageData from unsplash\n  const getIamgeData = async () => {\n    try {\n      const data = await getCityImage(city);\n\n      console.log(data);\n    } catch (error) {\n      console.log(\"Can't get no Data from unsplash_API\", error.message);\n    }\n  };\n\n  //* Change City Name *********\n  const onChangeCity = (e) => {\n    setCity(e.target.value);\n  };\n\n  //* Button Function *********\n  const onClickButton = () => {\n    getData();\n    getIamgeData();\n  };\n\n  // //* UseEffect / getData running *********\n  // useEffect(() => {\n  //   getData();\n  // }, []);\n\n  //* Date Operator ******\n\n  const dateBuilder = () => {\n    let d = new Date();\n    let months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n    let days = [\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n      'Sunday',\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  //* Change Background-Image due to the weather condition\n\n  // const bgChange = () => {\n  //   if (weatherdata === null) {\n  //     return;\n  //   }\n\n  //   const celcius = parseFloat(weatherdata.main.temp - 273.15).toFixed(0);\n  //   const weatherCondition = weatherdata.weather[0].main;\n\n  //   //! Snow\n  //   if (celcius <= 1) {\n  //     return 'weather-app-snow';\n  //   }\n  //   //! Clowds\n  //   if (celcius <= 5 && weatherCondition === 'Rain') {\n  //     return 'weather-app-clowds';\n  //     //! Sun\n  //   }\n  //   //! Rain\n  //   if (celcius >= 6 && celcius <= 16) {\n  //     return 'weather-app-rain';\n  //     //! Sun\n  //   }\n  //   if (celcius >= 17 && weatherCondition === 'Clear') {\n  //     return 'weather-app-sun';\n  //   }\n\n  //   // else {\n  //   //   return 'weather-app-warm';\n  //   // }\n  // };\n\n  // console.log('Clowdy, rainy or sunny', weatherdata.weather[0].main);\n  console.log('This is my weatherdata from Weather.js:', weatherdata);\n\n  return (\n    <div className={`weather ${weatherStatus ? 'active-weather' : ''}`}>\n      <div\n        className=\"weather-app\"\n        style={{\n          backgroundImage:\n            'url(' + `https://source.unsplash.com/500x800/?${city}` + ')',\n        }}\n      >\n        <div>\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              className=\"search-bar\"\n              placeholder=\"City Sounds\"\n              onChange={onChangeCity}\n            />\n            <button type=\"button\" onClick={onClickButton}>\n              Search\n            </button>\n          </div>\n          {weatherdata != null ? (\n            <div className=\"weather-wrap\">\n              <div className=\"location-box\">\n                <div className=\"location\">\n                  {weatherdata.name} | {weatherdata.sys.country}\n                </div>\n                <div className=\"date\">{dateBuilder()}</div>\n              </div>\n              <div className=\"weather-box\">\n                <div className=\"temp\">\n                  {parseFloat(weatherdata.main.temp - 273.15).toFixed(0)}Â°C\n                </div>\n                <div className=\"weather-condition\">\n                  {weatherdata.weather[0].main}\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n","/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/LibrarySong.js",[],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/services/apiKeys.js",[],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Products.js",["67","68"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction Products() {\n  const list = [\n    { name: 'hamburg', photo: 'https://source.unsplash.com/600x800/?hamburg' },\n  ];\n\n  const param = useParams();\n  console.log(param.productName);\n  console.log(param);\n  return (\n    <div>\n      <h1> CityPage</h1>\n      <h4>{onchange}</h4>\n\n      <img src=\"https://source.unsplash.com/500x800/?hamburg\" />\n    </div>\n  );\n}\n\nexport default Products;\n",["69","70"],"/home/user/Desktop/DCI_Projekte/weather_music_app/src/services/getCityImage.js",["71"],"import axios from 'axios';\n\nconst baseUrl = 'https://api.unsplash.com/photos/?';\nconst apiKey = 'MJjEHsquM6wGUZ-EaKn2JUfYGDHMMhcpVAqeq0L-cr0';\n\n// baseUrl + `q=${cityname}&appid=${apiKey}`;\n\nexport const getCityImage = async (cityimage) => {\n  try {\n    const response = await axios.get(\n      baseUrl + `q=${cityimage}&client_id=${apiKey}`\n    );\n    const data = await response.data;\n    // console.log('My unsplash API from getCityImage', response.data);\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":68,"column":11,"nodeType":"78","messageId":"79","endLine":68,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":111,"column":11,"nodeType":"78","messageId":"79","endLine":111,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"81","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":133,"column":20,"nodeType":"84","messageId":"85","endLine":133,"endColumn":21},{"ruleId":"82","severity":1,"message":"83","line":133,"column":69,"nodeType":"84","messageId":"85","endLine":133,"endColumn":70},{"ruleId":"76","severity":1,"message":"86","line":5,"column":9,"nodeType":"78","messageId":"79","endLine":5,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":17,"column":7,"nodeType":"89","endLine":17,"endColumn":65},{"ruleId":"72","replacedBy":"90"},{"ruleId":"74","replacedBy":"91"},{"ruleId":"76","severity":1,"message":"92","line":13,"column":11,"nodeType":"78","messageId":"79","endLine":13,"endColumn":15},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'celcius' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'list' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["93"],["94"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]