{"ast":null,"code":"var _jsxFileName = \"/Users/MrDjuke/Desktop/Project/weather_music_app/src/components/Player.js\",\n    _s = $RefreshSig$();\n\n//************************** THE PLAYER SECTION *********************** */\n//* Import the \"useRef\"\nimport React, { useState, useRef } from \"react\"; //* Import Icons from Fontawesome\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // Components I downloaded from \"https://fontawesome.com/\" (This is the actual components)\n\nimport { faPlay, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\"; // This are the icons (like Play, Stop, FF, RW)\n//*************************** CODE START *********************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n\n  //! Ref (introducing the html-refernce function with useRef)\n  const audioRef = useRef(null); // The initial (starting) value is set to \"null\"\n  //! Event Handlers (For Playing the song)\n  //! We are directing to the current\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying); // console.log(audioRef.current);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  }; //! Time Update\n\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n    console.log(current);\n  }; //! State\n\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null\n  }); //? ************************* RETURN ***********************\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \"//* We are referencing to the html-link - We are parsing \\\"useRef(null)\\\" //* from above The starting point\", /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"MUo3wg3FJ5cxn0aCd1l/9jZpKvo=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/MrDjuke/Desktop/Project/weather_music_app/src/components/Player.js"],"names":["React","useState","useRef","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","Player","currentSong","isPlaying","setIsPlaying","audioRef","playSongHandler","current","pause","play","timeUpdateHandler","e","target","currentTime","duration","setSongInfo","songInfo","console","log","audio"],"mappings":";;;AAAA;AAEA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC,C,CAEA;;AACA,SAASC,eAAT,QAAgC,gCAAhC,C,CAAkE;;AAClE,SACEC,MADF,EAEEC,WAFF,EAGEC,YAHF,QAIO,mCAJP,C,CAI4C;AAE5C;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAAD,KAA8C;AAAA;;AAC3D;AACA,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB,CAF2D,CAE5B;AAC/B;AACA;;AACA,QAAMU,eAAe,GAAG,MAAM;AAC5B,QAAIH,SAAJ,EAAe;AACbE,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACAJ,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ,CAFa,CAGb;AACD,KAJD,MAIO;AACLE,MAAAA,QAAQ,CAACE,OAAT,CAAiBE,IAAjB;AACAL,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;AACF,GATD,CAL2D,CAe3D;;;AACA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMJ,OAAO,GAAGI,CAAC,CAACC,MAAF,CAASC,WAAzB;AACA,UAAMC,QAAQ,GAAGH,CAAC,CAACC,MAAF,CAASE,QAA1B;AACAC,IAAAA,WAAW,CAAC,EAAE,GAAGC,QAAL;AAAeH,MAAAA,WAAW,EAAEN,OAA5B;AAAqCO,MAAAA;AAArC,KAAD,CAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACD,GALD,CAhB2D,CAuB3D;;;AACA,QAAM,CAACS,QAAD,EAAWD,WAAX,IAA0BpB,QAAQ,CAAC;AACvCkB,IAAAA,WAAW,EAAE,IAD0B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC,CAxB2D,CA6B3D;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAuC,QAAA,IAAI,EAAC,IAA5C;AAAiD,QAAA,IAAI,EAAEf;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AACE,QAAA,OAAO,EAAEO,eADX;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,IAAI,EAAC,IAHP;AAIE,QAAA,IAAI,EAAER;AAJR;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,eAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,IAAI,EAAEE;AAHR;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,8HAsBE;AACE,MAAA,YAAY,EAAEU,iBADhB;AAEE,MAAA,GAAG,EAAEL,QAFP;AAGE,MAAA,GAAG,EAAEH,WAAW,CAACiB;AAHnB;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA5DD;;GAAMlB,M;;KAAAA,M;AA8DN,eAAeA,MAAf","sourcesContent":["//************************** THE PLAYER SECTION *********************** */\n\n//* Import the \"useRef\"\nimport React, { useState, useRef } from \"react\";\n\n//* Import Icons from Fontawesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // Components I downloaded from \"https://fontawesome.com/\" (This is the actual components)\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\"; // This are the icons (like Play, Stop, FF, RW)\n\n//*************************** CODE START *********************/\n\nconst Player = ({ currentSong, isPlaying, setIsPlaying }) => {\n  //! Ref (introducing the html-refernce function with useRef)\n  const audioRef = useRef(null); // The initial (starting) value is set to \"null\"\n  //! Event Handlers (For Playing the song)\n  //! We are directing to the current\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n      // console.log(audioRef.current);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  //! Time Update\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n    console.log(current);\n  };\n\n  //! State\n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null,\n  });\n\n  //? ************************* RETURN ***********************\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>Start</p>\n        <input type=\"range\" />\n        <p>End</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n      //* We are referencing to the html-link - We are parsing \"useRef(null)\"\n      //* from above The starting point\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}