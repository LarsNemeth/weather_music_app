{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Intro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport Typed from 'typed.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Intro = () => {\n  _s();\n\n  const typeTarget = useRef(null);\n  useEffect(() => {\n    const typed = new Typed(typeTarget.current, {\n      strings: ['<h1>This is my City</h1>', '<h1>WeatherTape</h1>', '<h1>WeatherTape</h1>'],\n      typeSpeed: 100\n    });\n    return () => {\n      typed.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    ref: typeTarget\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Intro, \"5SFjlHY0yRkHuJMxQ6cQlNir48c=\");\n\n_c = Intro;\nexport default Intro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Intro\");","map":{"version":3,"sources":["/home/user/Desktop/DCI_Projekte/weather_music_app/src/components/Intro.js"],"names":["React","useEffect","useRef","Typed","Intro","typeTarget","typed","current","strings","typeSpeed","destroy"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,UAAU,GAAGH,MAAM,CAAC,IAAD,CAAzB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,KAAK,GAAG,IAAIH,KAAJ,CAAUE,UAAU,CAACE,OAArB,EAA8B;AAC1CC,MAAAA,OAAO,EAAE,CACP,0BADO,EAEP,sBAFO,EAGP,sBAHO,CADiC;AAM1CC,MAAAA,SAAS,EAAE;AAN+B,KAA9B,CAAd;AASA,WAAO,MAAM;AACXH,MAAAA,KAAK,CAACI,OAAN;AACD,KAFD;AAGD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBAAO;AAAM,IAAA,GAAG,EAAEL;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBD;;GAAMD,K;;KAAAA,K;AAoBN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Typed from 'typed.js';\n\nconst Intro = () => {\n  const typeTarget = useRef(null);\n\n  useEffect(() => {\n    const typed = new Typed(typeTarget.current, {\n      strings: [\n        '<h1>This is my City</h1>',\n        '<h1>WeatherTape</h1>',\n        '<h1>WeatherTape</h1>',\n      ],\n      typeSpeed: 100,\n    });\n\n    return () => {\n      typed.destroy();\n    };\n  }, []);\n\n  return <span ref={typeTarget} />;\n};\nexport default Intro;\n"]},"metadata":{},"sourceType":"module"}