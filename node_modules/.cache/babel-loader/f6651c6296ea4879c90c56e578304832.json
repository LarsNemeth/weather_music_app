{"ast":null,"code":"var _jsxFileName = \"/Users/MrDjuke/Desktop/Project/weather_music_app/src/components/Player.js\",\n    _s = $RefreshSig$();\n\n//************************** THE PLAYER SECTION *********************** */\n// Wurde nachträglich nach App.js verschoben\nimport React, { useEffect } from \"react\"; //* Import Icons from Fontawesome\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // Components I downloaded from \"https://fontawesome.com/\" (This is the actual components)\n\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\"; // This are the icons (like Play, Stop, FF, RW)\n//* Import playAudio from util\n\nimport { playAudio } from \"../util\"; //*************************** CODE START *********************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  audioRef,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setSongs,\n  setCurrentSong\n}) => {\n  _s();\n\n  //! useEffect\n  //? Was ist useEffect: useEffect(callback, dependencyArray) // Mit dem useEffect-Hook können wir Lebenszyklusmethoden implementieren, um die Komponente anzuweisen, nach dem Rendern einen „Effekt“ auszuführen. Die verschiedenen Arten von Effekten sind unbegrenzt, z. B. das Ändern des Hintergrundbildes oder des Dokumenttitels, das Hinzufügen von Animationen oder Musik, das Abrufen von Daten und Abonnements.\n  //! Wir benutzen hier den useEffect um den Titel auf active zu stellen / upzudaten, wenn wir den skip-forward oder skip-back Button benutzen\n  useEffect(() => {\n    // Add Active State\n    const newSongs = songs.map(song => {\n      if (song.id === currentSong.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]); //! Event Handlers (For Playing the song)\n  //? Was ist ein Event Handler: Event Handler sind Anweisungen oder Funktionen, die beim Eintreten eines Events wie click, touch oder beim submit eines Formulars Aktionen als Antwort auf das Ereignis durchführen. Die Event-Erkennung ist in Javascript schon eingebaut. Die Reaktion auf ein Event wird in Event Handlern programmiert, das sind spezielle Funktionen oder Methoden. Wir müssen festlegen, auf welchem Element wir ein Event erwarten und sagen, welche Funktion das Event behandeln soll.\n  //! We are directing to the current\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying); // console.log(audioRef.current);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  }; //! Skipping in the Song itself (mit dem Fortschritts-Balken)\n\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  }; //! Skip Function\n\n\n  const skipTrackHandler = direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]); // console.log(`next index ${currentIndex + 1}`);\n      // console.log(`songs length ${songs.length}`);\n    }\n\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]); //* wir müssen hier die playAudio-Componente einfügen, da sonst der Skip-Button ab Position 0 nicht mehr funktioniert\n\n        playAudio(isPlaying, audioRef);\n        return;\n      }\n\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n\n    playAudio(isPlaying, audioRef);\n  }; //! Function For Formating The Time\n\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }; //? ************************* RETURN ***********************\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        min: 0,\n        max: songInfo.duration || 0,\n        value: songInfo.currentTime,\n        onChange: dragHandler,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler(\"skip-back\"),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay //  icon = { if (isPlaying){\n        //    return faPause\n        //  }\n        //  else {faPlay}}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler(\"skip-forward\"),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/MrDjuke/Desktop/Project/weather_music_app/src/components/Player.js"],"names":["React","useEffect","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","faPause","playAudio","Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setSongs","setCurrentSong","newSongs","map","song","id","active","playSongHandler","current","pause","play","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","length","getTime","time","Math","floor","slice","duration"],"mappings":"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","sourcesContent":["//************************** THE PLAYER SECTION *********************** */\n\n// Wurde nachträglich nach App.js verschoben\nimport React, { useEffect } from \"react\";\n\n//* Import Icons from Fontawesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // Components I downloaded from \"https://fontawesome.com/\" (This is the actual components)\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\"; // This are the icons (like Play, Stop, FF, RW)\n\n//* Import playAudio from util\nimport { playAudio } from \"../util\";\n\n//*************************** CODE START *********************/\n\nconst Player = ({\n  audioRef,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setSongs,\n  setCurrentSong,\n}) => {\n  //! useEffect\n\n  //? Was ist useEffect: useEffect(callback, dependencyArray) // Mit dem useEffect-Hook können wir Lebenszyklusmethoden implementieren, um die Komponente anzuweisen, nach dem Rendern einen „Effekt“ auszuführen. Die verschiedenen Arten von Effekten sind unbegrenzt, z. B. das Ändern des Hintergrundbildes oder des Dokumenttitels, das Hinzufügen von Animationen oder Musik, das Abrufen von Daten und Abonnements.\n\n  //! Wir benutzen hier den useEffect um den Titel auf active zu stellen / upzudaten, wenn wir den skip-forward oder skip-back Button benutzen\n\n  useEffect(() => {\n    // Add Active State\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n\n  //! Event Handlers (For Playing the song)\n\n  //? Was ist ein Event Handler: Event Handler sind Anweisungen oder Funktionen, die beim Eintreten eines Events wie click, touch oder beim submit eines Formulars Aktionen als Antwort auf das Ereignis durchführen. Die Event-Erkennung ist in Javascript schon eingebaut. Die Reaktion auf ein Event wird in Event Handlern programmiert, das sind spezielle Funktionen oder Methoden. Wir müssen festlegen, auf welchem Element wir ein Event erwarten und sagen, welche Funktion das Event behandeln soll.\n\n  //! We are directing to the current\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n      // console.log(audioRef.current);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  //! Skipping in the Song itself (mit dem Fortschritts-Balken)\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  //! Skip Function\n\n  const skipTrackHandler = (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      // console.log(`next index ${currentIndex + 1}`);\n      // console.log(`songs length ${songs.length}`);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]);\n        //* wir müssen hier die playAudio-Componente einfügen, da sonst der Skip-Button ab Position 0 nicht mehr funktioniert\n        playAudio(isPlaying, audioRef);\n        return;\n      }\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n    playAudio(isPlaying, audioRef);\n  };\n\n  //! Function For Formating The Time\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  //? ************************* RETURN ***********************\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          min={0}\n          max={songInfo.duration || 0}\n          value={songInfo.currentTime}\n          onChange={dragHandler}\n          type=\"range\"\n        />\n        <p>{getTime(songInfo.currentTime)}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n          //  icon = { if (isPlaying){\n          //    return faPause\n          //  }\n          //  else {faPlay}}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n      {/* We are referencing to the html-link - We are parsing \"useRef(null)\"\n      from above The starting point */}\n    </div>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}